name: Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
        if: ${{ matrix.os == 'windows-latest'}}
      - run: ldd --version
        if: ${{ matrix.os == 'ubuntu-20.04'}}
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - uses: Project-Env/project-env-github-action@v1.3.1
      - run: ./etc/scripts/InstallNSIS.ps1
        if: ${{ matrix.os == 'windows-latest'}}
      - run: mvn -B -s etc/m2/settings-ci.xml -Psonar -Pnative-image verify
        if: ${{ matrix.os == 'ubuntu-20.04' && github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - run: mvn -B -s etc/m2/settings-ci.xml -Pnative-image verify
        if: ${{ matrix.os != 'ubuntu-20.04' || github.actor == 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
